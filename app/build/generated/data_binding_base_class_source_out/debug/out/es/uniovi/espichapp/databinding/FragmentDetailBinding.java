// Generated by view binder compiler. Do not edit!
package es.uniovi.espichapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import es.uniovi.espichapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView bgDetail;

  @NonNull
  public final CardView cdPhone;

  @NonNull
  public final CardView cvEmail;

  @NonNull
  public final CardView cvFacebook;

  @NonNull
  public final CardView cvInstagram;

  @NonNull
  public final CardView cvWeb;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final ImageView iconEmail;

  @NonNull
  public final ImageView iconFacebook;

  @NonNull
  public final ImageView iconInstagram;

  @NonNull
  public final ImageView iconPhone;

  @NonNull
  public final ImageView iconWeb;

  @NonNull
  public final ConstraintLayout layout;

  @NonNull
  public final TextView linkCoordinates;

  @NonNull
  public final TextView linkEmail;

  @NonNull
  public final TextView linkFacebook;

  @NonNull
  public final TextView linkInstagram;

  @NonNull
  public final TextView linkPhone;

  @NonNull
  public final TextView linkWeb;

  @NonNull
  public final RecyclerView rvDetailSlide;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final TextView titleContact;

  @NonNull
  public final TextView titleDescription;

  @NonNull
  public final TextView titleWebLinks;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvDetailAddress;

  @NonNull
  public final TextView tvDetailCouncil;

  @NonNull
  public final TextView tvDetailDescp;

  @NonNull
  public final TextView tvDetailName;

  private FragmentDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView bgDetail, @NonNull CardView cdPhone,
      @NonNull CardView cvEmail, @NonNull CardView cvFacebook, @NonNull CardView cvInstagram,
      @NonNull CardView cvWeb, @NonNull Guideline guideline, @NonNull Guideline guideline3,
      @NonNull ImageView iconEmail, @NonNull ImageView iconFacebook,
      @NonNull ImageView iconInstagram, @NonNull ImageView iconPhone, @NonNull ImageView iconWeb,
      @NonNull ConstraintLayout layout, @NonNull TextView linkCoordinates,
      @NonNull TextView linkEmail, @NonNull TextView linkFacebook, @NonNull TextView linkInstagram,
      @NonNull TextView linkPhone, @NonNull TextView linkWeb, @NonNull RecyclerView rvDetailSlide,
      @NonNull ScrollView scrollView2, @NonNull TextView titleContact,
      @NonNull TextView titleDescription, @NonNull TextView titleWebLinks,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvDetailAddress,
      @NonNull TextView tvDetailCouncil, @NonNull TextView tvDetailDescp,
      @NonNull TextView tvDetailName) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bgDetail = bgDetail;
    this.cdPhone = cdPhone;
    this.cvEmail = cvEmail;
    this.cvFacebook = cvFacebook;
    this.cvInstagram = cvInstagram;
    this.cvWeb = cvWeb;
    this.guideline = guideline;
    this.guideline3 = guideline3;
    this.iconEmail = iconEmail;
    this.iconFacebook = iconFacebook;
    this.iconInstagram = iconInstagram;
    this.iconPhone = iconPhone;
    this.iconWeb = iconWeb;
    this.layout = layout;
    this.linkCoordinates = linkCoordinates;
    this.linkEmail = linkEmail;
    this.linkFacebook = linkFacebook;
    this.linkInstagram = linkInstagram;
    this.linkPhone = linkPhone;
    this.linkWeb = linkWeb;
    this.rvDetailSlide = rvDetailSlide;
    this.scrollView2 = scrollView2;
    this.titleContact = titleContact;
    this.titleDescription = titleDescription;
    this.titleWebLinks = titleWebLinks;
    this.toolbar = toolbar;
    this.tvDetailAddress = tvDetailAddress;
    this.tvDetailCouncil = tvDetailCouncil;
    this.tvDetailDescp = tvDetailDescp;
    this.tvDetailName = tvDetailName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bgDetail;
      ImageView bgDetail = ViewBindings.findChildViewById(rootView, id);
      if (bgDetail == null) {
        break missingId;
      }

      id = R.id.cdPhone;
      CardView cdPhone = ViewBindings.findChildViewById(rootView, id);
      if (cdPhone == null) {
        break missingId;
      }

      id = R.id.cvEmail;
      CardView cvEmail = ViewBindings.findChildViewById(rootView, id);
      if (cvEmail == null) {
        break missingId;
      }

      id = R.id.cvFacebook;
      CardView cvFacebook = ViewBindings.findChildViewById(rootView, id);
      if (cvFacebook == null) {
        break missingId;
      }

      id = R.id.cvInstagram;
      CardView cvInstagram = ViewBindings.findChildViewById(rootView, id);
      if (cvInstagram == null) {
        break missingId;
      }

      id = R.id.cvWeb;
      CardView cvWeb = ViewBindings.findChildViewById(rootView, id);
      if (cvWeb == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.iconEmail;
      ImageView iconEmail = ViewBindings.findChildViewById(rootView, id);
      if (iconEmail == null) {
        break missingId;
      }

      id = R.id.iconFacebook;
      ImageView iconFacebook = ViewBindings.findChildViewById(rootView, id);
      if (iconFacebook == null) {
        break missingId;
      }

      id = R.id.iconInstagram;
      ImageView iconInstagram = ViewBindings.findChildViewById(rootView, id);
      if (iconInstagram == null) {
        break missingId;
      }

      id = R.id.iconPhone;
      ImageView iconPhone = ViewBindings.findChildViewById(rootView, id);
      if (iconPhone == null) {
        break missingId;
      }

      id = R.id.iconWeb;
      ImageView iconWeb = ViewBindings.findChildViewById(rootView, id);
      if (iconWeb == null) {
        break missingId;
      }

      ConstraintLayout layout = (ConstraintLayout) rootView;

      id = R.id.linkCoordinates;
      TextView linkCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (linkCoordinates == null) {
        break missingId;
      }

      id = R.id.linkEmail;
      TextView linkEmail = ViewBindings.findChildViewById(rootView, id);
      if (linkEmail == null) {
        break missingId;
      }

      id = R.id.linkFacebook;
      TextView linkFacebook = ViewBindings.findChildViewById(rootView, id);
      if (linkFacebook == null) {
        break missingId;
      }

      id = R.id.linkInstagram;
      TextView linkInstagram = ViewBindings.findChildViewById(rootView, id);
      if (linkInstagram == null) {
        break missingId;
      }

      id = R.id.linkPhone;
      TextView linkPhone = ViewBindings.findChildViewById(rootView, id);
      if (linkPhone == null) {
        break missingId;
      }

      id = R.id.linkWeb;
      TextView linkWeb = ViewBindings.findChildViewById(rootView, id);
      if (linkWeb == null) {
        break missingId;
      }

      id = R.id.rvDetailSlide;
      RecyclerView rvDetailSlide = ViewBindings.findChildViewById(rootView, id);
      if (rvDetailSlide == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.titleContact;
      TextView titleContact = ViewBindings.findChildViewById(rootView, id);
      if (titleContact == null) {
        break missingId;
      }

      id = R.id.titleDescription;
      TextView titleDescription = ViewBindings.findChildViewById(rootView, id);
      if (titleDescription == null) {
        break missingId;
      }

      id = R.id.titleWebLinks;
      TextView titleWebLinks = ViewBindings.findChildViewById(rootView, id);
      if (titleWebLinks == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvDetailAddress;
      TextView tvDetailAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailAddress == null) {
        break missingId;
      }

      id = R.id.tvDetailCouncil;
      TextView tvDetailCouncil = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailCouncil == null) {
        break missingId;
      }

      id = R.id.tvDetailDescp;
      TextView tvDetailDescp = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailDescp == null) {
        break missingId;
      }

      id = R.id.tvDetailName;
      TextView tvDetailName = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailName == null) {
        break missingId;
      }

      return new FragmentDetailBinding((ConstraintLayout) rootView, appBarLayout, bgDetail, cdPhone,
          cvEmail, cvFacebook, cvInstagram, cvWeb, guideline, guideline3, iconEmail, iconFacebook,
          iconInstagram, iconPhone, iconWeb, layout, linkCoordinates, linkEmail, linkFacebook,
          linkInstagram, linkPhone, linkWeb, rvDetailSlide, scrollView2, titleContact,
          titleDescription, titleWebLinks, toolbar, tvDetailAddress, tvDetailCouncil, tvDetailDescp,
          tvDetailName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
