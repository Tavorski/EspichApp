// Generated by view binder compiler. Do not edit!
package es.uniovi.espichapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import es.uniovi.espichapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView iconCask;

  @NonNull
  public final ImageView iconCheese;

  @NonNull
  public final ImageView iconCider;

  @NonNull
  public final ImageView imageBackground;

  @NonNull
  public final ImageView imageLocation;

  @NonNull
  public final TextView tvCouncil;

  @NonNull
  public final TextView tvName;

  private ItemViewBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView iconCask,
      @NonNull ImageView iconCheese, @NonNull ImageView iconCider,
      @NonNull ImageView imageBackground, @NonNull ImageView imageLocation,
      @NonNull TextView tvCouncil, @NonNull TextView tvName) {
    this.rootView = rootView;
    this.iconCask = iconCask;
    this.iconCheese = iconCheese;
    this.iconCider = iconCider;
    this.imageBackground = imageBackground;
    this.imageLocation = imageLocation;
    this.tvCouncil = tvCouncil;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iconCask;
      ImageView iconCask = ViewBindings.findChildViewById(rootView, id);
      if (iconCask == null) {
        break missingId;
      }

      id = R.id.iconCheese;
      ImageView iconCheese = ViewBindings.findChildViewById(rootView, id);
      if (iconCheese == null) {
        break missingId;
      }

      id = R.id.iconCider;
      ImageView iconCider = ViewBindings.findChildViewById(rootView, id);
      if (iconCider == null) {
        break missingId;
      }

      id = R.id.imageBackground;
      ImageView imageBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageBackground == null) {
        break missingId;
      }

      id = R.id.imageLocation;
      ImageView imageLocation = ViewBindings.findChildViewById(rootView, id);
      if (imageLocation == null) {
        break missingId;
      }

      id = R.id.tvCouncil;
      TextView tvCouncil = ViewBindings.findChildViewById(rootView, id);
      if (tvCouncil == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      return new ItemViewBinding((ConstraintLayout) rootView, iconCask, iconCheese, iconCider,
          imageBackground, imageLocation, tvCouncil, tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
